syntax = 'proto3';
package gooseai;
option go_package = "github.com/stability-ai/api-interfaces/gooseai/engines";
import "generation.proto";

// Possible engine type
enum EngineType {
  TEXT = 0;
  PICTURE = 1;
  AUDIO = 2;
  VIDEO = 3;
  CLASSIFICATION = 4;
  STORAGE = 5;
}

enum EngineTokenizer {
  GPT2 = 0;
  PILE = 1;
}

message EngineSampler {
  DiffusionSampler sampler = 1;
  
  bool supports_eta = 10;
  bool supports_churn = 11;
  bool supports_sigma_limits = 12;
  bool supports_karras_rho = 13;

  repeated SamplerNoiseType supported_noise_types = 20;
}

message EngineHintImageType {
  string type = 1;
  repeated string provider = 2;
}

// Engine info struct
message EngineInfo {
  string id = 1;
  string owner = 2;
  bool ready = 3;
  EngineType type = 4;
  EngineTokenizer tokenizer = 5;
  string name = 6;
  string description = 7;

  repeated EngineSampler supported_samplers = 500;
  repeated ArtifactType accepted_prompt_artifacts = 501;
  repeated EngineHintImageType accepted_hint_types = 502;

  string task = 510;
}

enum EngineTaskGroup {
  GENERATE=0;
  UPSCALE=1;
  UTILITY=2;
  HINTER=3;
}

message ListEnginesRequest {
  EngineTaskGroup task_group = 500;
  // Empty
}

// Engine info list
message Engines {
  repeated EngineInfo engine = 1;
}

service EnginesService {
  rpc ListEngines (ListEnginesRequest) returns (Engines) {};
}
